apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: timesheet
  name: timesheets
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: timesheet
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: timesheet
    spec:
      containers:
      - env:
        - name: DJANGO_SECURITY_KEY
          valueFrom:
            secretKeyRef:
              key: django_security_key
              name: timesheetinfos
        - name: GSPREAD_SHEET
          value: [MY_SPREADSHEET]
        - name: GSPREAD_ACCESS_CONF_LOCATION
          value: /dev/null
        - name: HOSTNAME
          value: timesheet.hosting.call.watch
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres_password
              name: timesheetinfos
        - name: POSTGRES_SERVICE_HOST
          value: postgres
        - name: SLACK_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              key: slack_bearer_token
              name: timesheetinfos
        - name: SLACK_SIGNING_SECRET
          valueFrom:
            secretKeyRef:
              key: slack_signing_secret
              name: timesheetinfos
        image: [MY_DOCKER_REPO]/slack-timesheet:0.1
        imagePullPolicy: IfNotPresent
        name: timesheets
        ports:
        - containerPort: 8000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:

